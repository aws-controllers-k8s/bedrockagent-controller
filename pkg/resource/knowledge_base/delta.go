// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package knowledge_base

import (
	"bytes"
	"reflect"

	ackcompare "github.com/aws-controllers-k8s/runtime/pkg/compare"
	acktags "github.com/aws-controllers-k8s/runtime/pkg/tags"
)

// Hack to avoid import errors during build...
var (
	_ = &bytes.Buffer{}
	_ = &reflect.Method{}
	_ = &acktags.Tags{}
)

// newResourceDelta returns a new `ackcompare.Delta` used to compare two
// resources
func newResourceDelta(
	a *resource,
	b *resource,
) *ackcompare.Delta {
	delta := ackcompare.NewDelta()
	if (a == nil && b != nil) ||
		(a != nil && b == nil) {
		delta.Add("", a, b)
		return delta
	}

	if ackcompare.HasNilDifference(a.ko.Spec.ClientToken, b.ko.Spec.ClientToken) {
		delta.Add("Spec.ClientToken", a.ko.Spec.ClientToken, b.ko.Spec.ClientToken)
	} else if a.ko.Spec.ClientToken != nil && b.ko.Spec.ClientToken != nil {
		if *a.ko.Spec.ClientToken != *b.ko.Spec.ClientToken {
			delta.Add("Spec.ClientToken", a.ko.Spec.ClientToken, b.ko.Spec.ClientToken)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.Description, b.ko.Spec.Description) {
		delta.Add("Spec.Description", a.ko.Spec.Description, b.ko.Spec.Description)
	} else if a.ko.Spec.Description != nil && b.ko.Spec.Description != nil {
		if *a.ko.Spec.Description != *b.ko.Spec.Description {
			delta.Add("Spec.Description", a.ko.Spec.Description, b.ko.Spec.Description)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.KnowledgeBaseConfiguration, b.ko.Spec.KnowledgeBaseConfiguration) {
		delta.Add("Spec.KnowledgeBaseConfiguration", a.ko.Spec.KnowledgeBaseConfiguration, b.ko.Spec.KnowledgeBaseConfiguration)
	} else if a.ko.Spec.KnowledgeBaseConfiguration != nil && b.ko.Spec.KnowledgeBaseConfiguration != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.KnowledgeBaseConfiguration.KendraKnowledgeBaseConfiguration, b.ko.Spec.KnowledgeBaseConfiguration.KendraKnowledgeBaseConfiguration) {
			delta.Add("Spec.KnowledgeBaseConfiguration.KendraKnowledgeBaseConfiguration", a.ko.Spec.KnowledgeBaseConfiguration.KendraKnowledgeBaseConfiguration, b.ko.Spec.KnowledgeBaseConfiguration.KendraKnowledgeBaseConfiguration)
		} else if a.ko.Spec.KnowledgeBaseConfiguration.KendraKnowledgeBaseConfiguration != nil && b.ko.Spec.KnowledgeBaseConfiguration.KendraKnowledgeBaseConfiguration != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.KnowledgeBaseConfiguration.KendraKnowledgeBaseConfiguration.KendraIndexARN, b.ko.Spec.KnowledgeBaseConfiguration.KendraKnowledgeBaseConfiguration.KendraIndexARN) {
				delta.Add("Spec.KnowledgeBaseConfiguration.KendraKnowledgeBaseConfiguration.KendraIndexARN", a.ko.Spec.KnowledgeBaseConfiguration.KendraKnowledgeBaseConfiguration.KendraIndexARN, b.ko.Spec.KnowledgeBaseConfiguration.KendraKnowledgeBaseConfiguration.KendraIndexARN)
			} else if a.ko.Spec.KnowledgeBaseConfiguration.KendraKnowledgeBaseConfiguration.KendraIndexARN != nil && b.ko.Spec.KnowledgeBaseConfiguration.KendraKnowledgeBaseConfiguration.KendraIndexARN != nil {
				if *a.ko.Spec.KnowledgeBaseConfiguration.KendraKnowledgeBaseConfiguration.KendraIndexARN != *b.ko.Spec.KnowledgeBaseConfiguration.KendraKnowledgeBaseConfiguration.KendraIndexARN {
					delta.Add("Spec.KnowledgeBaseConfiguration.KendraKnowledgeBaseConfiguration.KendraIndexARN", a.ko.Spec.KnowledgeBaseConfiguration.KendraKnowledgeBaseConfiguration.KendraIndexARN, b.ko.Spec.KnowledgeBaseConfiguration.KendraKnowledgeBaseConfiguration.KendraIndexARN)
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration) {
			delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration)
		} else if a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration != nil && b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration) {
				delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration)
			} else if a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration != nil && b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration) {
					delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration)
				} else if a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration != nil && b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration != nil {
					if ackcompare.HasNilDifference(a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration) {
						delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration)
					} else if a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration != nil && b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration != nil {
						if ackcompare.HasNilDifference(a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration) {
							delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration)
						} else if a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration != nil && b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration != nil {
							if ackcompare.HasNilDifference(a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.DatabaseUser, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.DatabaseUser) {
								delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.DatabaseUser", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.DatabaseUser, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.DatabaseUser)
							} else if a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.DatabaseUser != nil && b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.DatabaseUser != nil {
								if *a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.DatabaseUser != *b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.DatabaseUser {
									delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.DatabaseUser", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.DatabaseUser, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.DatabaseUser)
								}
							}
							if ackcompare.HasNilDifference(a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.Type, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.Type) {
								delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.Type", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.Type, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.Type)
							} else if a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.Type != nil && b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.Type != nil {
								if *a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.Type != *b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.Type {
									delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.Type", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.Type, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.Type)
								}
							}
							if ackcompare.HasNilDifference(a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.UsernamePasswordSecretARN, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.UsernamePasswordSecretARN) {
								delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.UsernamePasswordSecretARN", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.UsernamePasswordSecretARN, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.UsernamePasswordSecretARN)
							} else if a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.UsernamePasswordSecretARN != nil && b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.UsernamePasswordSecretARN != nil {
								if *a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.UsernamePasswordSecretARN != *b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.UsernamePasswordSecretARN {
									delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.UsernamePasswordSecretARN", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.UsernamePasswordSecretARN, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.AuthConfiguration.UsernamePasswordSecretARN)
								}
							}
						}
						if ackcompare.HasNilDifference(a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.ClusterIdentifier, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.ClusterIdentifier) {
							delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.ClusterIdentifier", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.ClusterIdentifier, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.ClusterIdentifier)
						} else if a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.ClusterIdentifier != nil && b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.ClusterIdentifier != nil {
							if *a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.ClusterIdentifier != *b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.ClusterIdentifier {
								delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.ClusterIdentifier", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.ClusterIdentifier, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ProvisionedConfiguration.ClusterIdentifier)
							}
						}
					}
					if ackcompare.HasNilDifference(a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration) {
						delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration)
					} else if a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration != nil && b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration != nil {
						if ackcompare.HasNilDifference(a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.AuthConfiguration, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.AuthConfiguration) {
							delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.AuthConfiguration", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.AuthConfiguration, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.AuthConfiguration)
						} else if a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.AuthConfiguration != nil && b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.AuthConfiguration != nil {
							if ackcompare.HasNilDifference(a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.AuthConfiguration.Type, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.AuthConfiguration.Type) {
								delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.AuthConfiguration.Type", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.AuthConfiguration.Type, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.AuthConfiguration.Type)
							} else if a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.AuthConfiguration.Type != nil && b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.AuthConfiguration.Type != nil {
								if *a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.AuthConfiguration.Type != *b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.AuthConfiguration.Type {
									delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.AuthConfiguration.Type", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.AuthConfiguration.Type, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.AuthConfiguration.Type)
								}
							}
							if ackcompare.HasNilDifference(a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.AuthConfiguration.UsernamePasswordSecretARN, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.AuthConfiguration.UsernamePasswordSecretARN) {
								delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.AuthConfiguration.UsernamePasswordSecretARN", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.AuthConfiguration.UsernamePasswordSecretARN, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.AuthConfiguration.UsernamePasswordSecretARN)
							} else if a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.AuthConfiguration.UsernamePasswordSecretARN != nil && b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.AuthConfiguration.UsernamePasswordSecretARN != nil {
								if *a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.AuthConfiguration.UsernamePasswordSecretARN != *b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.AuthConfiguration.UsernamePasswordSecretARN {
									delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.AuthConfiguration.UsernamePasswordSecretARN", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.AuthConfiguration.UsernamePasswordSecretARN, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.AuthConfiguration.UsernamePasswordSecretARN)
								}
							}
						}
						if ackcompare.HasNilDifference(a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.WorkgroupARN, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.WorkgroupARN) {
							delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.WorkgroupARN", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.WorkgroupARN, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.WorkgroupARN)
						} else if a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.WorkgroupARN != nil && b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.WorkgroupARN != nil {
							if *a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.WorkgroupARN != *b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.WorkgroupARN {
								delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.WorkgroupARN", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.WorkgroupARN, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.ServerlessConfiguration.WorkgroupARN)
							}
						}
					}
					if ackcompare.HasNilDifference(a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.Type, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.Type) {
						delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.Type", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.Type, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.Type)
					} else if a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.Type != nil && b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.Type != nil {
						if *a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.Type != *b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.Type {
							delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.Type", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.Type, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryEngineConfiguration.Type)
						}
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration) {
					delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration)
				} else if a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration != nil && b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration != nil {
					if ackcompare.HasNilDifference(a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.ExecutionTimeoutSeconds, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.ExecutionTimeoutSeconds) {
						delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.ExecutionTimeoutSeconds", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.ExecutionTimeoutSeconds, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.ExecutionTimeoutSeconds)
					} else if a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.ExecutionTimeoutSeconds != nil && b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.ExecutionTimeoutSeconds != nil {
						if *a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.ExecutionTimeoutSeconds != *b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.ExecutionTimeoutSeconds {
							delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.ExecutionTimeoutSeconds", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.ExecutionTimeoutSeconds, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.ExecutionTimeoutSeconds)
						}
					}
					if ackcompare.HasNilDifference(a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.GenerationContext, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.GenerationContext) {
						delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.GenerationContext", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.GenerationContext, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.GenerationContext)
					} else if a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.GenerationContext != nil && b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.GenerationContext != nil {
						if len(a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.GenerationContext.CuratedQueries) != len(b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.GenerationContext.CuratedQueries) {
							delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.GenerationContext.CuratedQueries", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.GenerationContext.CuratedQueries, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.GenerationContext.CuratedQueries)
						} else if len(a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.GenerationContext.CuratedQueries) > 0 {
							if !reflect.DeepEqual(a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.GenerationContext.CuratedQueries, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.GenerationContext.CuratedQueries) {
								delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.GenerationContext.CuratedQueries", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.GenerationContext.CuratedQueries, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.GenerationContext.CuratedQueries)
							}
						}
						if len(a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.GenerationContext.Tables) != len(b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.GenerationContext.Tables) {
							delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.GenerationContext.Tables", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.GenerationContext.Tables, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.GenerationContext.Tables)
						} else if len(a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.GenerationContext.Tables) > 0 {
							if !reflect.DeepEqual(a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.GenerationContext.Tables, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.GenerationContext.Tables) {
								delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.GenerationContext.Tables", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.GenerationContext.Tables, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.QueryGenerationConfiguration.GenerationContext.Tables)
							}
						}
					}
				}
				if len(a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.StorageConfigurations) != len(b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.StorageConfigurations) {
					delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.StorageConfigurations", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.StorageConfigurations, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.StorageConfigurations)
				} else if len(a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.StorageConfigurations) > 0 {
					if !reflect.DeepEqual(a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.StorageConfigurations, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.StorageConfigurations) {
						delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.StorageConfigurations", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.StorageConfigurations, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.RedshiftConfiguration.StorageConfigurations)
					}
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.Type, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.Type) {
				delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.Type", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.Type, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.Type)
			} else if a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.Type != nil && b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.Type != nil {
				if *a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.Type != *b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.Type {
					delta.Add("Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.Type", a.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.Type, b.ko.Spec.KnowledgeBaseConfiguration.SQLKnowledgeBaseConfiguration.Type)
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.KnowledgeBaseConfiguration.Type, b.ko.Spec.KnowledgeBaseConfiguration.Type) {
			delta.Add("Spec.KnowledgeBaseConfiguration.Type", a.ko.Spec.KnowledgeBaseConfiguration.Type, b.ko.Spec.KnowledgeBaseConfiguration.Type)
		} else if a.ko.Spec.KnowledgeBaseConfiguration.Type != nil && b.ko.Spec.KnowledgeBaseConfiguration.Type != nil {
			if *a.ko.Spec.KnowledgeBaseConfiguration.Type != *b.ko.Spec.KnowledgeBaseConfiguration.Type {
				delta.Add("Spec.KnowledgeBaseConfiguration.Type", a.ko.Spec.KnowledgeBaseConfiguration.Type, b.ko.Spec.KnowledgeBaseConfiguration.Type)
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration, b.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration) {
			delta.Add("Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration", a.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration, b.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration)
		} else if a.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration != nil && b.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelARN, b.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelARN) {
				delta.Add("Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelARN", a.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelARN, b.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelARN)
			} else if a.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelARN != nil && b.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelARN != nil {
				if *a.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelARN != *b.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelARN {
					delta.Add("Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelARN", a.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelARN, b.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelARN)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration, b.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration) {
				delta.Add("Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration", a.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration, b.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration)
			} else if a.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration != nil && b.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration.BedrockEmbeddingModelConfiguration, b.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration.BedrockEmbeddingModelConfiguration) {
					delta.Add("Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration.BedrockEmbeddingModelConfiguration", a.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration.BedrockEmbeddingModelConfiguration, b.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration.BedrockEmbeddingModelConfiguration)
				} else if a.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration.BedrockEmbeddingModelConfiguration != nil && b.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration.BedrockEmbeddingModelConfiguration != nil {
					if ackcompare.HasNilDifference(a.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration.BedrockEmbeddingModelConfiguration.Dimensions, b.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration.BedrockEmbeddingModelConfiguration.Dimensions) {
						delta.Add("Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration.BedrockEmbeddingModelConfiguration.Dimensions", a.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration.BedrockEmbeddingModelConfiguration.Dimensions, b.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration.BedrockEmbeddingModelConfiguration.Dimensions)
					} else if a.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration.BedrockEmbeddingModelConfiguration.Dimensions != nil && b.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration.BedrockEmbeddingModelConfiguration.Dimensions != nil {
						if *a.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration.BedrockEmbeddingModelConfiguration.Dimensions != *b.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration.BedrockEmbeddingModelConfiguration.Dimensions {
							delta.Add("Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration.BedrockEmbeddingModelConfiguration.Dimensions", a.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration.BedrockEmbeddingModelConfiguration.Dimensions, b.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration.BedrockEmbeddingModelConfiguration.Dimensions)
						}
					}
					if ackcompare.HasNilDifference(a.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration.BedrockEmbeddingModelConfiguration.EmbeddingDataType, b.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration.BedrockEmbeddingModelConfiguration.EmbeddingDataType) {
						delta.Add("Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration.BedrockEmbeddingModelConfiguration.EmbeddingDataType", a.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration.BedrockEmbeddingModelConfiguration.EmbeddingDataType, b.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration.BedrockEmbeddingModelConfiguration.EmbeddingDataType)
					} else if a.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration.BedrockEmbeddingModelConfiguration.EmbeddingDataType != nil && b.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration.BedrockEmbeddingModelConfiguration.EmbeddingDataType != nil {
						if *a.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration.BedrockEmbeddingModelConfiguration.EmbeddingDataType != *b.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration.BedrockEmbeddingModelConfiguration.EmbeddingDataType {
							delta.Add("Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration.BedrockEmbeddingModelConfiguration.EmbeddingDataType", a.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration.BedrockEmbeddingModelConfiguration.EmbeddingDataType, b.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.EmbeddingModelConfiguration.BedrockEmbeddingModelConfiguration.EmbeddingDataType)
						}
					}
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.SupplementalDataStorageConfiguration, b.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.SupplementalDataStorageConfiguration) {
				delta.Add("Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.SupplementalDataStorageConfiguration", a.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.SupplementalDataStorageConfiguration, b.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.SupplementalDataStorageConfiguration)
			} else if a.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.SupplementalDataStorageConfiguration != nil && b.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.SupplementalDataStorageConfiguration != nil {
				if len(a.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.SupplementalDataStorageConfiguration.StorageLocations) != len(b.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.SupplementalDataStorageConfiguration.StorageLocations) {
					delta.Add("Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.SupplementalDataStorageConfiguration.StorageLocations", a.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.SupplementalDataStorageConfiguration.StorageLocations, b.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.SupplementalDataStorageConfiguration.StorageLocations)
				} else if len(a.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.SupplementalDataStorageConfiguration.StorageLocations) > 0 {
					if !reflect.DeepEqual(a.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.SupplementalDataStorageConfiguration.StorageLocations, b.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.SupplementalDataStorageConfiguration.StorageLocations) {
						delta.Add("Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.SupplementalDataStorageConfiguration.StorageLocations", a.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.SupplementalDataStorageConfiguration.StorageLocations, b.ko.Spec.KnowledgeBaseConfiguration.VectorKnowledgeBaseConfiguration.SupplementalDataStorageConfiguration.StorageLocations)
					}
				}
			}
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.Name, b.ko.Spec.Name) {
		delta.Add("Spec.Name", a.ko.Spec.Name, b.ko.Spec.Name)
	} else if a.ko.Spec.Name != nil && b.ko.Spec.Name != nil {
		if *a.ko.Spec.Name != *b.ko.Spec.Name {
			delta.Add("Spec.Name", a.ko.Spec.Name, b.ko.Spec.Name)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.RoleARN, b.ko.Spec.RoleARN) {
		delta.Add("Spec.RoleARN", a.ko.Spec.RoleARN, b.ko.Spec.RoleARN)
	} else if a.ko.Spec.RoleARN != nil && b.ko.Spec.RoleARN != nil {
		if *a.ko.Spec.RoleARN != *b.ko.Spec.RoleARN {
			delta.Add("Spec.RoleARN", a.ko.Spec.RoleARN, b.ko.Spec.RoleARN)
		}
	}
	if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration, b.ko.Spec.StorageConfiguration) {
		delta.Add("Spec.StorageConfiguration", a.ko.Spec.StorageConfiguration, b.ko.Spec.StorageConfiguration)
	} else if a.ko.Spec.StorageConfiguration != nil && b.ko.Spec.StorageConfiguration != nil {
		if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration, b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration) {
			delta.Add("Spec.StorageConfiguration.MongoDBAtlasConfiguration", a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration, b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration)
		} else if a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration != nil && b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.CollectionName, b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.CollectionName) {
				delta.Add("Spec.StorageConfiguration.MongoDBAtlasConfiguration.CollectionName", a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.CollectionName, b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.CollectionName)
			} else if a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.CollectionName != nil && b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.CollectionName != nil {
				if *a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.CollectionName != *b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.CollectionName {
					delta.Add("Spec.StorageConfiguration.MongoDBAtlasConfiguration.CollectionName", a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.CollectionName, b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.CollectionName)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.CredentialsSecretARN, b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.CredentialsSecretARN) {
				delta.Add("Spec.StorageConfiguration.MongoDBAtlasConfiguration.CredentialsSecretARN", a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.CredentialsSecretARN, b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.CredentialsSecretARN)
			} else if a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.CredentialsSecretARN != nil && b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.CredentialsSecretARN != nil {
				if *a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.CredentialsSecretARN != *b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.CredentialsSecretARN {
					delta.Add("Spec.StorageConfiguration.MongoDBAtlasConfiguration.CredentialsSecretARN", a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.CredentialsSecretARN, b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.CredentialsSecretARN)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.DatabaseName, b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.DatabaseName) {
				delta.Add("Spec.StorageConfiguration.MongoDBAtlasConfiguration.DatabaseName", a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.DatabaseName, b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.DatabaseName)
			} else if a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.DatabaseName != nil && b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.DatabaseName != nil {
				if *a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.DatabaseName != *b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.DatabaseName {
					delta.Add("Spec.StorageConfiguration.MongoDBAtlasConfiguration.DatabaseName", a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.DatabaseName, b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.DatabaseName)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.Endpoint, b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.Endpoint) {
				delta.Add("Spec.StorageConfiguration.MongoDBAtlasConfiguration.Endpoint", a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.Endpoint, b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.Endpoint)
			} else if a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.Endpoint != nil && b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.Endpoint != nil {
				if *a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.Endpoint != *b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.Endpoint {
					delta.Add("Spec.StorageConfiguration.MongoDBAtlasConfiguration.Endpoint", a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.Endpoint, b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.Endpoint)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.EndpointServiceName, b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.EndpointServiceName) {
				delta.Add("Spec.StorageConfiguration.MongoDBAtlasConfiguration.EndpointServiceName", a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.EndpointServiceName, b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.EndpointServiceName)
			} else if a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.EndpointServiceName != nil && b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.EndpointServiceName != nil {
				if *a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.EndpointServiceName != *b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.EndpointServiceName {
					delta.Add("Spec.StorageConfiguration.MongoDBAtlasConfiguration.EndpointServiceName", a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.EndpointServiceName, b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.EndpointServiceName)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping, b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping) {
				delta.Add("Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping", a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping, b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping)
			} else if a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping != nil && b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.MetadataField, b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.MetadataField) {
					delta.Add("Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.MetadataField", a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.MetadataField, b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.MetadataField)
				} else if a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.MetadataField != nil && b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.MetadataField != nil {
					if *a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.MetadataField != *b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.MetadataField {
						delta.Add("Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.MetadataField", a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.MetadataField, b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.MetadataField)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.TextField, b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.TextField) {
					delta.Add("Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.TextField", a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.TextField, b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.TextField)
				} else if a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.TextField != nil && b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.TextField != nil {
					if *a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.TextField != *b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.TextField {
						delta.Add("Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.TextField", a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.TextField, b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.TextField)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.VectorField, b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.VectorField) {
					delta.Add("Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.VectorField", a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.VectorField, b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.VectorField)
				} else if a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.VectorField != nil && b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.VectorField != nil {
					if *a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.VectorField != *b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.VectorField {
						delta.Add("Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.VectorField", a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.VectorField, b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.FieldMapping.VectorField)
					}
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.VectorIndexName, b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.VectorIndexName) {
				delta.Add("Spec.StorageConfiguration.MongoDBAtlasConfiguration.VectorIndexName", a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.VectorIndexName, b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.VectorIndexName)
			} else if a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.VectorIndexName != nil && b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.VectorIndexName != nil {
				if *a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.VectorIndexName != *b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.VectorIndexName {
					delta.Add("Spec.StorageConfiguration.MongoDBAtlasConfiguration.VectorIndexName", a.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.VectorIndexName, b.ko.Spec.StorageConfiguration.MongoDBAtlasConfiguration.VectorIndexName)
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration, b.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration) {
			delta.Add("Spec.StorageConfiguration.OpensearchServerlessConfiguration", a.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration, b.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration)
		} else if a.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration != nil && b.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.CollectionARN, b.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.CollectionARN) {
				delta.Add("Spec.StorageConfiguration.OpensearchServerlessConfiguration.CollectionARN", a.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.CollectionARN, b.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.CollectionARN)
			} else if a.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.CollectionARN != nil && b.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.CollectionARN != nil {
				if *a.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.CollectionARN != *b.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.CollectionARN {
					delta.Add("Spec.StorageConfiguration.OpensearchServerlessConfiguration.CollectionARN", a.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.CollectionARN, b.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.CollectionARN)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping, b.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping) {
				delta.Add("Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping", a.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping, b.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping)
			} else if a.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping != nil && b.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.MetadataField, b.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.MetadataField) {
					delta.Add("Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.MetadataField", a.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.MetadataField, b.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.MetadataField)
				} else if a.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.MetadataField != nil && b.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.MetadataField != nil {
					if *a.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.MetadataField != *b.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.MetadataField {
						delta.Add("Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.MetadataField", a.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.MetadataField, b.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.MetadataField)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.TextField, b.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.TextField) {
					delta.Add("Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.TextField", a.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.TextField, b.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.TextField)
				} else if a.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.TextField != nil && b.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.TextField != nil {
					if *a.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.TextField != *b.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.TextField {
						delta.Add("Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.TextField", a.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.TextField, b.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.TextField)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.VectorField, b.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.VectorField) {
					delta.Add("Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.VectorField", a.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.VectorField, b.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.VectorField)
				} else if a.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.VectorField != nil && b.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.VectorField != nil {
					if *a.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.VectorField != *b.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.VectorField {
						delta.Add("Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.VectorField", a.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.VectorField, b.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.FieldMapping.VectorField)
					}
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.VectorIndexName, b.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.VectorIndexName) {
				delta.Add("Spec.StorageConfiguration.OpensearchServerlessConfiguration.VectorIndexName", a.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.VectorIndexName, b.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.VectorIndexName)
			} else if a.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.VectorIndexName != nil && b.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.VectorIndexName != nil {
				if *a.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.VectorIndexName != *b.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.VectorIndexName {
					delta.Add("Spec.StorageConfiguration.OpensearchServerlessConfiguration.VectorIndexName", a.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.VectorIndexName, b.ko.Spec.StorageConfiguration.OpensearchServerlessConfiguration.VectorIndexName)
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.PineconeConfiguration, b.ko.Spec.StorageConfiguration.PineconeConfiguration) {
			delta.Add("Spec.StorageConfiguration.PineconeConfiguration", a.ko.Spec.StorageConfiguration.PineconeConfiguration, b.ko.Spec.StorageConfiguration.PineconeConfiguration)
		} else if a.ko.Spec.StorageConfiguration.PineconeConfiguration != nil && b.ko.Spec.StorageConfiguration.PineconeConfiguration != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.PineconeConfiguration.ConnectionString, b.ko.Spec.StorageConfiguration.PineconeConfiguration.ConnectionString) {
				delta.Add("Spec.StorageConfiguration.PineconeConfiguration.ConnectionString", a.ko.Spec.StorageConfiguration.PineconeConfiguration.ConnectionString, b.ko.Spec.StorageConfiguration.PineconeConfiguration.ConnectionString)
			} else if a.ko.Spec.StorageConfiguration.PineconeConfiguration.ConnectionString != nil && b.ko.Spec.StorageConfiguration.PineconeConfiguration.ConnectionString != nil {
				if *a.ko.Spec.StorageConfiguration.PineconeConfiguration.ConnectionString != *b.ko.Spec.StorageConfiguration.PineconeConfiguration.ConnectionString {
					delta.Add("Spec.StorageConfiguration.PineconeConfiguration.ConnectionString", a.ko.Spec.StorageConfiguration.PineconeConfiguration.ConnectionString, b.ko.Spec.StorageConfiguration.PineconeConfiguration.ConnectionString)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.PineconeConfiguration.CredentialsSecretARN, b.ko.Spec.StorageConfiguration.PineconeConfiguration.CredentialsSecretARN) {
				delta.Add("Spec.StorageConfiguration.PineconeConfiguration.CredentialsSecretARN", a.ko.Spec.StorageConfiguration.PineconeConfiguration.CredentialsSecretARN, b.ko.Spec.StorageConfiguration.PineconeConfiguration.CredentialsSecretARN)
			} else if a.ko.Spec.StorageConfiguration.PineconeConfiguration.CredentialsSecretARN != nil && b.ko.Spec.StorageConfiguration.PineconeConfiguration.CredentialsSecretARN != nil {
				if *a.ko.Spec.StorageConfiguration.PineconeConfiguration.CredentialsSecretARN != *b.ko.Spec.StorageConfiguration.PineconeConfiguration.CredentialsSecretARN {
					delta.Add("Spec.StorageConfiguration.PineconeConfiguration.CredentialsSecretARN", a.ko.Spec.StorageConfiguration.PineconeConfiguration.CredentialsSecretARN, b.ko.Spec.StorageConfiguration.PineconeConfiguration.CredentialsSecretARN)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.PineconeConfiguration.FieldMapping, b.ko.Spec.StorageConfiguration.PineconeConfiguration.FieldMapping) {
				delta.Add("Spec.StorageConfiguration.PineconeConfiguration.FieldMapping", a.ko.Spec.StorageConfiguration.PineconeConfiguration.FieldMapping, b.ko.Spec.StorageConfiguration.PineconeConfiguration.FieldMapping)
			} else if a.ko.Spec.StorageConfiguration.PineconeConfiguration.FieldMapping != nil && b.ko.Spec.StorageConfiguration.PineconeConfiguration.FieldMapping != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.PineconeConfiguration.FieldMapping.MetadataField, b.ko.Spec.StorageConfiguration.PineconeConfiguration.FieldMapping.MetadataField) {
					delta.Add("Spec.StorageConfiguration.PineconeConfiguration.FieldMapping.MetadataField", a.ko.Spec.StorageConfiguration.PineconeConfiguration.FieldMapping.MetadataField, b.ko.Spec.StorageConfiguration.PineconeConfiguration.FieldMapping.MetadataField)
				} else if a.ko.Spec.StorageConfiguration.PineconeConfiguration.FieldMapping.MetadataField != nil && b.ko.Spec.StorageConfiguration.PineconeConfiguration.FieldMapping.MetadataField != nil {
					if *a.ko.Spec.StorageConfiguration.PineconeConfiguration.FieldMapping.MetadataField != *b.ko.Spec.StorageConfiguration.PineconeConfiguration.FieldMapping.MetadataField {
						delta.Add("Spec.StorageConfiguration.PineconeConfiguration.FieldMapping.MetadataField", a.ko.Spec.StorageConfiguration.PineconeConfiguration.FieldMapping.MetadataField, b.ko.Spec.StorageConfiguration.PineconeConfiguration.FieldMapping.MetadataField)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.PineconeConfiguration.FieldMapping.TextField, b.ko.Spec.StorageConfiguration.PineconeConfiguration.FieldMapping.TextField) {
					delta.Add("Spec.StorageConfiguration.PineconeConfiguration.FieldMapping.TextField", a.ko.Spec.StorageConfiguration.PineconeConfiguration.FieldMapping.TextField, b.ko.Spec.StorageConfiguration.PineconeConfiguration.FieldMapping.TextField)
				} else if a.ko.Spec.StorageConfiguration.PineconeConfiguration.FieldMapping.TextField != nil && b.ko.Spec.StorageConfiguration.PineconeConfiguration.FieldMapping.TextField != nil {
					if *a.ko.Spec.StorageConfiguration.PineconeConfiguration.FieldMapping.TextField != *b.ko.Spec.StorageConfiguration.PineconeConfiguration.FieldMapping.TextField {
						delta.Add("Spec.StorageConfiguration.PineconeConfiguration.FieldMapping.TextField", a.ko.Spec.StorageConfiguration.PineconeConfiguration.FieldMapping.TextField, b.ko.Spec.StorageConfiguration.PineconeConfiguration.FieldMapping.TextField)
					}
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.PineconeConfiguration.Namespace, b.ko.Spec.StorageConfiguration.PineconeConfiguration.Namespace) {
				delta.Add("Spec.StorageConfiguration.PineconeConfiguration.Namespace", a.ko.Spec.StorageConfiguration.PineconeConfiguration.Namespace, b.ko.Spec.StorageConfiguration.PineconeConfiguration.Namespace)
			} else if a.ko.Spec.StorageConfiguration.PineconeConfiguration.Namespace != nil && b.ko.Spec.StorageConfiguration.PineconeConfiguration.Namespace != nil {
				if *a.ko.Spec.StorageConfiguration.PineconeConfiguration.Namespace != *b.ko.Spec.StorageConfiguration.PineconeConfiguration.Namespace {
					delta.Add("Spec.StorageConfiguration.PineconeConfiguration.Namespace", a.ko.Spec.StorageConfiguration.PineconeConfiguration.Namespace, b.ko.Spec.StorageConfiguration.PineconeConfiguration.Namespace)
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.RdsConfiguration, b.ko.Spec.StorageConfiguration.RdsConfiguration) {
			delta.Add("Spec.StorageConfiguration.RdsConfiguration", a.ko.Spec.StorageConfiguration.RdsConfiguration, b.ko.Spec.StorageConfiguration.RdsConfiguration)
		} else if a.ko.Spec.StorageConfiguration.RdsConfiguration != nil && b.ko.Spec.StorageConfiguration.RdsConfiguration != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.RdsConfiguration.CredentialsSecretARN, b.ko.Spec.StorageConfiguration.RdsConfiguration.CredentialsSecretARN) {
				delta.Add("Spec.StorageConfiguration.RdsConfiguration.CredentialsSecretARN", a.ko.Spec.StorageConfiguration.RdsConfiguration.CredentialsSecretARN, b.ko.Spec.StorageConfiguration.RdsConfiguration.CredentialsSecretARN)
			} else if a.ko.Spec.StorageConfiguration.RdsConfiguration.CredentialsSecretARN != nil && b.ko.Spec.StorageConfiguration.RdsConfiguration.CredentialsSecretARN != nil {
				if *a.ko.Spec.StorageConfiguration.RdsConfiguration.CredentialsSecretARN != *b.ko.Spec.StorageConfiguration.RdsConfiguration.CredentialsSecretARN {
					delta.Add("Spec.StorageConfiguration.RdsConfiguration.CredentialsSecretARN", a.ko.Spec.StorageConfiguration.RdsConfiguration.CredentialsSecretARN, b.ko.Spec.StorageConfiguration.RdsConfiguration.CredentialsSecretARN)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.RdsConfiguration.DatabaseName, b.ko.Spec.StorageConfiguration.RdsConfiguration.DatabaseName) {
				delta.Add("Spec.StorageConfiguration.RdsConfiguration.DatabaseName", a.ko.Spec.StorageConfiguration.RdsConfiguration.DatabaseName, b.ko.Spec.StorageConfiguration.RdsConfiguration.DatabaseName)
			} else if a.ko.Spec.StorageConfiguration.RdsConfiguration.DatabaseName != nil && b.ko.Spec.StorageConfiguration.RdsConfiguration.DatabaseName != nil {
				if *a.ko.Spec.StorageConfiguration.RdsConfiguration.DatabaseName != *b.ko.Spec.StorageConfiguration.RdsConfiguration.DatabaseName {
					delta.Add("Spec.StorageConfiguration.RdsConfiguration.DatabaseName", a.ko.Spec.StorageConfiguration.RdsConfiguration.DatabaseName, b.ko.Spec.StorageConfiguration.RdsConfiguration.DatabaseName)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping, b.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping) {
				delta.Add("Spec.StorageConfiguration.RdsConfiguration.FieldMapping", a.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping, b.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping)
			} else if a.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping != nil && b.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.MetadataField, b.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.MetadataField) {
					delta.Add("Spec.StorageConfiguration.RdsConfiguration.FieldMapping.MetadataField", a.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.MetadataField, b.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.MetadataField)
				} else if a.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.MetadataField != nil && b.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.MetadataField != nil {
					if *a.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.MetadataField != *b.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.MetadataField {
						delta.Add("Spec.StorageConfiguration.RdsConfiguration.FieldMapping.MetadataField", a.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.MetadataField, b.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.MetadataField)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.PrimaryKeyField, b.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.PrimaryKeyField) {
					delta.Add("Spec.StorageConfiguration.RdsConfiguration.FieldMapping.PrimaryKeyField", a.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.PrimaryKeyField, b.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.PrimaryKeyField)
				} else if a.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.PrimaryKeyField != nil && b.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.PrimaryKeyField != nil {
					if *a.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.PrimaryKeyField != *b.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.PrimaryKeyField {
						delta.Add("Spec.StorageConfiguration.RdsConfiguration.FieldMapping.PrimaryKeyField", a.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.PrimaryKeyField, b.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.PrimaryKeyField)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.TextField, b.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.TextField) {
					delta.Add("Spec.StorageConfiguration.RdsConfiguration.FieldMapping.TextField", a.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.TextField, b.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.TextField)
				} else if a.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.TextField != nil && b.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.TextField != nil {
					if *a.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.TextField != *b.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.TextField {
						delta.Add("Spec.StorageConfiguration.RdsConfiguration.FieldMapping.TextField", a.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.TextField, b.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.TextField)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.VectorField, b.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.VectorField) {
					delta.Add("Spec.StorageConfiguration.RdsConfiguration.FieldMapping.VectorField", a.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.VectorField, b.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.VectorField)
				} else if a.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.VectorField != nil && b.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.VectorField != nil {
					if *a.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.VectorField != *b.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.VectorField {
						delta.Add("Spec.StorageConfiguration.RdsConfiguration.FieldMapping.VectorField", a.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.VectorField, b.ko.Spec.StorageConfiguration.RdsConfiguration.FieldMapping.VectorField)
					}
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.RdsConfiguration.ResourceARN, b.ko.Spec.StorageConfiguration.RdsConfiguration.ResourceARN) {
				delta.Add("Spec.StorageConfiguration.RdsConfiguration.ResourceARN", a.ko.Spec.StorageConfiguration.RdsConfiguration.ResourceARN, b.ko.Spec.StorageConfiguration.RdsConfiguration.ResourceARN)
			} else if a.ko.Spec.StorageConfiguration.RdsConfiguration.ResourceARN != nil && b.ko.Spec.StorageConfiguration.RdsConfiguration.ResourceARN != nil {
				if *a.ko.Spec.StorageConfiguration.RdsConfiguration.ResourceARN != *b.ko.Spec.StorageConfiguration.RdsConfiguration.ResourceARN {
					delta.Add("Spec.StorageConfiguration.RdsConfiguration.ResourceARN", a.ko.Spec.StorageConfiguration.RdsConfiguration.ResourceARN, b.ko.Spec.StorageConfiguration.RdsConfiguration.ResourceARN)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.RdsConfiguration.TableName, b.ko.Spec.StorageConfiguration.RdsConfiguration.TableName) {
				delta.Add("Spec.StorageConfiguration.RdsConfiguration.TableName", a.ko.Spec.StorageConfiguration.RdsConfiguration.TableName, b.ko.Spec.StorageConfiguration.RdsConfiguration.TableName)
			} else if a.ko.Spec.StorageConfiguration.RdsConfiguration.TableName != nil && b.ko.Spec.StorageConfiguration.RdsConfiguration.TableName != nil {
				if *a.ko.Spec.StorageConfiguration.RdsConfiguration.TableName != *b.ko.Spec.StorageConfiguration.RdsConfiguration.TableName {
					delta.Add("Spec.StorageConfiguration.RdsConfiguration.TableName", a.ko.Spec.StorageConfiguration.RdsConfiguration.TableName, b.ko.Spec.StorageConfiguration.RdsConfiguration.TableName)
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration, b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration) {
			delta.Add("Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration", a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration, b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration)
		} else if a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration != nil && b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration != nil {
			if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.CredentialsSecretARN, b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.CredentialsSecretARN) {
				delta.Add("Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.CredentialsSecretARN", a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.CredentialsSecretARN, b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.CredentialsSecretARN)
			} else if a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.CredentialsSecretARN != nil && b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.CredentialsSecretARN != nil {
				if *a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.CredentialsSecretARN != *b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.CredentialsSecretARN {
					delta.Add("Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.CredentialsSecretARN", a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.CredentialsSecretARN, b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.CredentialsSecretARN)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.Endpoint, b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.Endpoint) {
				delta.Add("Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.Endpoint", a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.Endpoint, b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.Endpoint)
			} else if a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.Endpoint != nil && b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.Endpoint != nil {
				if *a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.Endpoint != *b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.Endpoint {
					delta.Add("Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.Endpoint", a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.Endpoint, b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.Endpoint)
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping, b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping) {
				delta.Add("Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping", a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping, b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping)
			} else if a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping != nil && b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping != nil {
				if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.MetadataField, b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.MetadataField) {
					delta.Add("Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.MetadataField", a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.MetadataField, b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.MetadataField)
				} else if a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.MetadataField != nil && b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.MetadataField != nil {
					if *a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.MetadataField != *b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.MetadataField {
						delta.Add("Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.MetadataField", a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.MetadataField, b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.MetadataField)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.TextField, b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.TextField) {
					delta.Add("Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.TextField", a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.TextField, b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.TextField)
				} else if a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.TextField != nil && b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.TextField != nil {
					if *a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.TextField != *b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.TextField {
						delta.Add("Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.TextField", a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.TextField, b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.TextField)
					}
				}
				if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.VectorField, b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.VectorField) {
					delta.Add("Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.VectorField", a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.VectorField, b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.VectorField)
				} else if a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.VectorField != nil && b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.VectorField != nil {
					if *a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.VectorField != *b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.VectorField {
						delta.Add("Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.VectorField", a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.VectorField, b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.FieldMapping.VectorField)
					}
				}
			}
			if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.VectorIndexName, b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.VectorIndexName) {
				delta.Add("Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.VectorIndexName", a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.VectorIndexName, b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.VectorIndexName)
			} else if a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.VectorIndexName != nil && b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.VectorIndexName != nil {
				if *a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.VectorIndexName != *b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.VectorIndexName {
					delta.Add("Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.VectorIndexName", a.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.VectorIndexName, b.ko.Spec.StorageConfiguration.RedisEnterpriseCloudConfiguration.VectorIndexName)
				}
			}
		}
		if ackcompare.HasNilDifference(a.ko.Spec.StorageConfiguration.Type, b.ko.Spec.StorageConfiguration.Type) {
			delta.Add("Spec.StorageConfiguration.Type", a.ko.Spec.StorageConfiguration.Type, b.ko.Spec.StorageConfiguration.Type)
		} else if a.ko.Spec.StorageConfiguration.Type != nil && b.ko.Spec.StorageConfiguration.Type != nil {
			if *a.ko.Spec.StorageConfiguration.Type != *b.ko.Spec.StorageConfiguration.Type {
				delta.Add("Spec.StorageConfiguration.Type", a.ko.Spec.StorageConfiguration.Type, b.ko.Spec.StorageConfiguration.Type)
			}
		}
	}
	desiredACKTags, _ := convertToOrderedACKTags(a.ko.Spec.Tags)
	latestACKTags, _ := convertToOrderedACKTags(b.ko.Spec.Tags)
	if !ackcompare.MapStringStringEqual(desiredACKTags, latestACKTags) {
		delta.Add("Spec.Tags", a.ko.Spec.Tags, b.ko.Spec.Tags)
	}

	return delta
}
