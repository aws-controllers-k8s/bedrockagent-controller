// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	ackv1alpha1 "github.com/aws-controllers-k8s/runtime/apis/core/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// AgentSpec defines the desired state of Agent.
//
// Contains details about an agent.
type AgentSpec struct {

	// The agent's collaboration role.
	AgentCollaboration *string `json:"agentCollaboration,omitempty"`
	// A name for the agent that you create.
	//
	// Regex Pattern: `^([0-9a-zA-Z][_-]?){1,100}$`
	// +kubebuilder:validation:Required
	AgentName *string `json:"agentName"`
	// The Amazon Resource Name (ARN) of the IAM role with permissions to invoke
	// API operations on the agent.
	//
	// Regex Pattern: `^arn:aws(-[^:]+)?:iam::([0-9]{12})?:role/.+$`
	AgentResourceRoleARN *string                                  `json:"agentResourceRoleARN,omitempty"`
	AgentResourceRoleRef *ackv1alpha1.AWSResourceReferenceWrapper `json:"agentResourceRoleRef,omitempty"`
	// Contains details of the custom orchestration configured for the agent.
	CustomOrchestration *CustomOrchestration `json:"customOrchestration,omitempty"`
	// The Amazon Resource Name (ARN) of the KMS key with which to encrypt the agent.
	//
	// Regex Pattern: `^arn:aws(|-cn|-us-gov):kms:[a-zA-Z0-9-]*:[0-9]{12}:key/[a-zA-Z0-9-]{36}$`
	CustomerEncryptionKeyARN *string `json:"customerEncryptionKeyARN,omitempty"`
	// A description of the agent.
	Description *string `json:"description,omitempty"`
	// The identifier for the model that you want to be used for orchestration by
	// the agent you create.
	//
	// The modelId to provide depends on the type of model or throughput that you
	// use:
	//
	//   - If you use a base model, specify the model ID or its ARN. For a list
	//     of model IDs for base models, see Amazon Bedrock base model IDs (on-demand
	//     throughput) (https://docs.aws.amazon.com/bedrock/latest/userguide/model-ids.html#model-ids-arns)
	//     in the Amazon Bedrock User Guide.
	//
	//   - If you use an inference profile, specify the inference profile ID or
	//     its ARN. For a list of inference profile IDs, see Supported Regions and
	//     models for cross-region inference (https://docs.aws.amazon.com/bedrock/latest/userguide/cross-region-inference-support.html)
	//     in the Amazon Bedrock User Guide.
	//
	//   - If you use a provisioned model, specify the ARN of the Provisioned Throughput.
	//     For more information, see Run inference using a Provisioned Throughput
	//     (https://docs.aws.amazon.com/bedrock/latest/userguide/prov-thru-use.html)
	//     in the Amazon Bedrock User Guide.
	//
	//   - If you use a custom model, first purchase Provisioned Throughput for
	//     it. Then specify the ARN of the resulting provisioned model. For more
	//     information, see Use a custom model in Amazon Bedrock (https://docs.aws.amazon.com/bedrock/latest/userguide/model-customization-use.html)
	//     in the Amazon Bedrock User Guide.
	//
	//   - If you use an imported model (https://docs.aws.amazon.com/bedrock/latest/userguide/model-customization-import-model.html),
	//     specify the ARN of the imported model. You can get the model ARN from
	//     a successful call to CreateModelImportJob (https://docs.aws.amazon.com/bedrock/latest/APIReference/API_CreateModelImportJob.html)
	//     or from the Imported models page in the Amazon Bedrock console.
	//
	// Regex Pattern: `^(arn:aws(-[^:]{1,12})?:(bedrock|sagemaker):[a-z0-9-]{1,20}:([0-9]{12})?:([a-z-]+/)?)?([a-zA-Z0-9.-]{1,63}){0,2}(([:][a-z0-9-]{1,63}){0,2})?(/[a-z0-9]{1,12})?$`
	FoundationModel *string `json:"foundationModel,omitempty"`
	// The unique Guardrail configuration assigned to the agent when it is created.
	GuardrailConfiguration *GuardrailConfiguration `json:"guardrailConfiguration,omitempty"`
	// The number of seconds for which Amazon Bedrock keeps information about a
	// user's conversation with the agent.
	//
	// A user interaction remains active for the amount of time specified. If no
	// conversation occurs during this time, the session expires and Amazon Bedrock
	// deletes any data provided before the timeout.
	IdleSessionTTLInSeconds *int64 `json:"idleSessionTTLInSeconds,omitempty"`
	// Instructions that tell the agent what it should do and how it should interact
	// with users.
	Instruction *string `json:"instruction,omitempty"`
	// Contains the details of the memory configured for the agent.
	MemoryConfiguration *MemoryConfiguration `json:"memoryConfiguration,omitempty"`
	// Specifies the type of orchestration strategy for the agent. This is set to
	// DEFAULT orchestration type, by default.
	OrchestrationType *string `json:"orchestrationType,omitempty"`
	// Contains configurations to override prompts in different parts of an agent
	// sequence. For more information, see Advanced prompts (https://docs.aws.amazon.com/bedrock/latest/userguide/advanced-prompts.html).
	PromptOverrideConfiguration *PromptOverrideConfiguration `json:"promptOverrideConfiguration,omitempty"`
	// An object containing key-value pairs that define the tags to attach to the
	// resource.
	Tags map[string]*string `json:"tags,omitempty"`
}

// AgentStatus defines the observed state of Agent
type AgentStatus struct {
	// All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
	// that is used to contain resource sync state, account ownership,
	// constructed ARN for the resource
	// +kubebuilder:validation:Optional
	ACKResourceMetadata *ackv1alpha1.ResourceMetadata `json:"ackResourceMetadata"`
	// All CRs managed by ACK have a common `Status.Conditions` member that
	// contains a collection of `ackv1alpha1.Condition` objects that describe
	// the various terminal states of the CR and its backend AWS service API
	// resource
	// +kubebuilder:validation:Optional
	Conditions []*ackv1alpha1.Condition `json:"conditions"`
	// The unique identifier of the agent.
	//
	// Regex Pattern: `^[0-9a-zA-Z]{10}$`
	// +kubebuilder:validation:Optional
	AgentID *string `json:"agentID,omitempty"`
	// The status of the agent and whether it is ready for use. The following statuses
	// are possible:
	//
	//    * CREATING – The agent is being created.
	//
	//    * PREPARING – The agent is being prepared.
	//
	//    * PREPARED – The agent is prepared and ready to be invoked.
	//
	//    * NOT_PREPARED – The agent has been created but not yet prepared.
	//
	//    * FAILED – The agent API operation failed.
	//
	//    * UPDATING – The agent is being updated.
	//
	//    * DELETING – The agent is being deleted.
	// +kubebuilder:validation:Optional
	AgentStatus *string `json:"agentStatus,omitempty"`
	// The version of the agent.
	//
	// Regex Pattern: `^DRAFT$`
	// +kubebuilder:validation:Optional
	AgentVersion *string `json:"agentVersion,omitempty"`
	// A unique, case-sensitive identifier to ensure that the API request completes
	// no more than one time. If this token matches a previous request, Amazon Bedrock
	// ignores the request, but does not return an error. For more information,
	// see Ensuring idempotency (https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html).
	//
	// Regex Pattern: `^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,256}$`
	// +kubebuilder:validation:Optional
	ClientToken *string `json:"clientToken,omitempty"`
	// The time at which the agent was created.
	// +kubebuilder:validation:Optional
	CreatedAt *metav1.Time `json:"createdAt,omitempty"`
	// Contains reasons that the agent-related API that you invoked failed.
	// +kubebuilder:validation:Optional
	FailureReasons []*string `json:"failureReasons,omitempty"`
	// The time at which the agent was last prepared.
	// +kubebuilder:validation:Optional
	PreparedAt *metav1.Time `json:"preparedAt,omitempty"`
	// Contains recommended actions to take for the agent-related API that you invoked
	// to succeed.
	// +kubebuilder:validation:Optional
	RecommendedActions []*string `json:"recommendedActions,omitempty"`
	// The time at which the agent was last updated.
	// +kubebuilder:validation:Optional
	UpdatedAt *metav1.Time `json:"updatedAt,omitempty"`
}

// Agent is the Schema for the Agents API
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
type Agent struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AgentSpec   `json:"spec,omitempty"`
	Status            AgentStatus `json:"status,omitempty"`
}

// AgentList contains a list of Agent
// +kubebuilder:object:root=true
type AgentList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Agent `json:"items"`
}

func init() {
	SchemeBuilder.Register(&Agent{}, &AgentList{})
}
